public interface IRepository
{
    //void Create(Employee entity);
    //IQueryable<Employee> GetAll();
    //void Delete(T entity);
    //void Update(T entity);

}

-------------------------------------------------------------

//private readonly DunaLevelDbContext _context;


public Repository(/*DunaLevelDbContext ctx*/)
{
   //this._context = ctx;
}

//public void Create(Employee entity)
//{
//   _context.Set<Employee>().Add(entity);
//   _context.SaveChanges();
//}

//public void Delete(T entity)
//{
//    ctx.Set<T>().Remove(entity);
//    ctx.SaveChanges();
//}

//public IQueryable<T> GetAll()
//{
//    return ctx.Set<T>();
//}

//public void Update(T entity)
//{
//    var old = FindById(entity.Id);
//    //ez reflexió - ne törődj vele mi ez :) 
//    //minden tulajdonság programozott átmásolása
//    foreach (var prop in typeof(T).GetProperties())
//    {
//        prop.SetValue(old, prop.GetValue(entity));
//    }
//    ctx.Set<T>().Update(old);
//    ctx.SaveChanges();
//}